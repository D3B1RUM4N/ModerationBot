// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}


datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

//npx prisma db push
// npx prisma migrate dev --name 

model Server {
  serverID   String       @id
  serverName String
  WarnList   WarnList[]
  Role       Role[]
  Welcome    Welcome[]
  enable_xp  Boolean      @default(true)
  Experience Experience[]
  Ticket     Ticket[]
}

model Welcome {
  channelID String @id
  server    Server @relation(fields: [serverID], references: [serverID], onDelete: Cascade)
  serverID  String
}

model Role {
  roleID   String @id
  server   Server @relation(fields: [serverID], references: [serverID], onDelete: Cascade)
  serverID String
}

model WarnList {
  warnID   Int      @id @default(autoincrement())
  userID   String
  authorID String
  reason   String?
  dateWarn DateTime
  server   Server   @relation(fields: [serverID], references: [serverID], onDelete: Cascade)
  serverID String
}

model Experience {
  userID   String
  serverID String
  level    Int
  xp       Int
  server   Server @relation(fields: [serverID], references: [serverID], onDelete: Cascade)

  @@id([userID, serverID])
}

model Ticket {
  ticketID        Int             @id @default(autoincrement())
  serverID        String
  title           String
  description     String
  roleID          String
  messageID       String?
  TicketMessageID Int?
  messages        TicketMessage[]
  server          Server          @relation(fields: [serverID], references: [serverID], onDelete: Cascade)
}

model TicketMessage {
  messageID   Int    @id @default(autoincrement())
  ticketID    Int
  title       String
  description String
  ticket      Ticket @relation(fields: [ticketID], references: [ticketID], onDelete: Cascade)
}
